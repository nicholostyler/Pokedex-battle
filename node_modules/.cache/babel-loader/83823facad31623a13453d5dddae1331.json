{"ast":null,"code":"var _jsxFileName = \"/Users/nicholostyler/Documents/pokedex-app/src/Pokegame.js\";\nimport React, { Component } from 'react';\nimport Pokedex from './Pokedex';\nimport Pokecard from './Pokecard';\nconst NAME_API = 'https://pokeapi.co/api/v2/pokemon/';\n\nclass Pokegame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentWillMount() {\n    this.buildHand();\n  }\n\n  render() {\n    if (this.state.loading == false) {\n      return React.createElement(\"div\", {\n        className: \"Pokegame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Pokedex, {\n        hand: this.state.hand1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"VS\"), React.createElement(Pokedex, {\n        hand: this.state.hand2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n  randomID() {\n    let min = Math.ceil(1);\n    let max = Math.floor(150);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  async fetchData() {\n    let id = this.randomID();\n    let url = `${NAME_API}${id}`;\n    let json = null;\n    let response = await fetch(url);\n    let data = await response.json();\n    return data;\n  }\n\n  async buildHand() {\n    let hand1 = [];\n    let hand2 = [];\n    let data1 = null;\n    let data2 = null;\n\n    for (let step = 0; step < 8; step++) {\n      this.fetchData().then(data => hand1.push(data));\n    }\n\n    for (let step = 0; step < 8; step++) {\n      this.fetchData().then(data => hand2.push(data));\n    }\n\n    this.setState({\n      loading: false\n    });\n    return React.createElement(\"div\", {\n      className: \"Pokedex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Pokedex, {\n      hands: hand1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Pokedex, {\n      hand: hand2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n  async parseJSONData() {\n    let data1 = [];\n    let data2 = [];\n    let hand1 = [];\n    let hand2 = [];\n\n    for (let step = 0; step < 8; step++) {\n      let id = this.randomID();\n      let url = fetch(url).then(res => res.json()).then(json => data1.push(json));\n    }\n\n    for (let step = 0; step < 8; step++) {\n      let id = this.randomID();\n      let url = `${NAME_API}${id}`;\n      fetch(url).then(res => res.json()).then(json => data2.push(json));\n    }\n\n    for (let step = 0; step < 8; step++) {\n      console.log(data1[step]);\n      let element = data1[step];\n      hand1.push({\n        id: element.id,\n        name: element.name,\n        type: element.types[0].type.name,\n        base_experience: element.base_experience\n      });\n    }\n\n    console.log('here i am');\n    data1.forEach(element => {\n      console.log(element);\n      hand1.push({\n        id: element.id,\n        name: element.name,\n        type: element.types[0].type.name,\n        base_experience: element.base_experience\n      });\n    });\n    data2.forEach(element => {\n      hand2.push({\n        id: element.id,\n        name: element.name,\n        type: element.types[0].type.name,\n        base_experience: element.base_experience\n      });\n    });\n    this.setState({\n      hand1: hand1,\n      hand2: hand2,\n      loading: false\n    });\n    console.log(hand1); //const res = await fetch(url);\n    //const pokemon = await res.json();\n  }\n\n}\n\nexport default Pokegame;","map":{"version":3,"sources":["/Users/nicholostyler/Documents/pokedex-app/src/Pokegame.js"],"names":["React","Component","Pokedex","Pokecard","NAME_API","Pokegame","constructor","props","state","loading","componentWillMount","buildHand","render","hand1","hand2","randomID","min","Math","ceil","max","floor","random","fetchData","id","url","json","response","fetch","data","data1","data2","step","then","push","setState","parseJSONData","res","console","log","element","name","type","types","base_experience","forEach"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Pokedex from './Pokedex';\nimport Pokecard from './Pokecard';\n\nconst NAME_API =\n    'https://pokeapi.co/api/v2/pokemon/';\n    \nclass Pokegame extends Component {    \n    constructor (props) {\n        super(props);\n        this.state = {\n            loading: true,\n        }\n    }\n\n    componentWillMount() {\n        this.buildHand();\n    }\n\n    render() {\n        if (this.state.loading == false){\n            return (\n            <div className=\"Pokegame\">\n                <Pokedex hand={this.state.hand1} />\n                <h1>VS</h1>\n                <Pokedex hand={this.state.hand2} />\n            </div>\n        )\n        } else {\n            return <h1>Loading...</h1>\n        }\n    }\n    \n    randomID(){\n        let min = Math.ceil(1);\n        let max = Math.floor(150);\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    async fetchData() {\n        let id = this.randomID();\n        let url = `${NAME_API}${id}`;\n        let json = null;\n\n        let response = await fetch(url);\n        let data = await response.json();\n        return data;\n    }\n\n    async buildHand() {\n        let hand1 = [];\n        let hand2 = [];\n        let data1 = null;\n        let data2 = null;\n\n        for (let step = 0; step < 8; step++) {\n            this.fetchData()\n                .then(data => hand1.push(data));\n        }\n\n        for (let step = 0; step < 8; step++) {\n            this.fetchData()\n                .then(data => hand2.push(data));\n        }\n\n        this.setState({loading: false});\n\n        return (\n            <div className=\"Pokedex\">\n                <Pokedex hands={hand1}/>\n                <Pokedex hand={hand2}/>\n            </div>\n        )\n    }\n\n\n    async parseJSONData () {\n        let data1 = [];\n        let data2 = [];\n\n        let hand1 = [];\n        let hand2 = [];\n\n        for (let step = 0; step < 8; step++) {\n            let id = this.randomID();\n            let url = \n            fetch(url)\n                .then(res => res.json())\n                .then(json => data1.push(json));\n        }\n\n        for (let step = 0; step < 8; step++) {\n            let id = this.randomID();\n            let url = `${NAME_API}${id}`\n            fetch(url)\n                .then(res => res.json())\n                .then(json => data2.push(json));\n                \n        }\n\n        for (let step = 0; step < 8; step++) {\n            console.log(data1[step]);\n            let element = data1[step];\n            hand1.push({id: element.id, name: element.name, type: element.types[0].type.name, base_experience: element.base_experience})\n        }\n\n        console.log('here i am');\n        data1.forEach(element => {\n            console.log(element);\n            hand1.push({id: element.id, name: element.name, type: element.types[0].type.name, base_experience: element.base_experience})\n        });\n        data2.forEach(element => {\n            hand2.push({id: element.id, name: element.name, type: element.types[0].type.name, base_experience: element.base_experience})\n        });\n\n        this.setState({hand1: hand1, hand2: hand2, loading: false});\n        console.log(hand1);\n        //const res = await fetch(url);\n        //const pokemon = await res.json();\n    }\n}\n\nexport default Pokegame;"]},"metadata":{},"sourceType":"module"}