{"ast":null,"code":"var _jsxFileName = \"/Users/nicholostyler/Documents/pokedex-app/src/Pokegame.js\";\nimport React, { Component } from 'react';\nimport Pokedex from './Pokedex';\nconst NAME_API = 'https://pokeapi.co/api/v2/pokemon/';\n\nclass Pokegame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentWillMount() {\n    this.createHand();\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return React.createElement(\"div\", {\n        className: \"Pokegame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Pokedex, {\n        hand: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"VS\"), React.createElement(Pokedex, {\n        hand: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n  createHand() {\n    let id = this.randomID();\n    let url = `${NAME_API}${id}`;\n    let hand = [this.parseDetails(id, url), this.parseDetails(id, url), this.parseDetails(id, url), this.parseDetails(id, url), this.parseDetails(id, url), this.parseDetails(id, url), this.parseDetails(id, url), this.parseDetails(id, url)];\n    return hand;\n  }\n\n  randomID() {\n    let min = Math.ceil(1);\n    let max = Math.floor(150);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  async parseDetails(id, url) {\n    const res = await fetch(url);\n    const pokemon = await res.json();\n    const pokemonName = pokemon.name;\n    const pokemonEXP = pokemon.base_experience;\n    const pokemonType = pokemon.types[0].type.name; //console.log(pokemon);\n\n    this.setState({\n      data: pokemon,\n      loading: false\n    });\n    return pokemon; //this.setState({name: pokemonName, base_experience: pokemonEXP, type: pokemonType});\n    //console.log('state changed');\n  }\n\n}\n\nexport default Pokegame;","map":{"version":3,"sources":["/Users/nicholostyler/Documents/pokedex-app/src/Pokegame.js"],"names":["React","Component","Pokedex","NAME_API","Pokegame","constructor","props","state","loading","componentWillMount","createHand","render","data","id","randomID","url","hand","parseDetails","min","Math","ceil","max","floor","random","res","fetch","pokemon","json","pokemonName","name","pokemonEXP","base_experience","pokemonType","types","type","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,QAAQ,GACV,oCADJ;;AAGA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,UAAL;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKJ,KAAL,CAAWC,OAAhB,EAAwB;AACpB,aACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEI,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADA;AAOH,KARD,MAQO;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;AACJ;;AAEDF,EAAAA,UAAU,GAAG;AACT,QAAIG,EAAE,GAAG,KAAKC,QAAL,EAAT;AACA,QAAIC,GAAG,GAAI,GAAEZ,QAAS,GAAEU,EAAG,EAA3B;AACA,QAAIG,IAAI,GAAG,CACP,KAAKC,YAAL,CAAkBJ,EAAlB,EAAsBE,GAAtB,CADO,EAEP,KAAKE,YAAL,CAAkBJ,EAAlB,EAAsBE,GAAtB,CAFO,EAGP,KAAKE,YAAL,CAAkBJ,EAAlB,EAAsBE,GAAtB,CAHO,EAIP,KAAKE,YAAL,CAAkBJ,EAAlB,EAAsBE,GAAtB,CAJO,EAKP,KAAKE,YAAL,CAAkBJ,EAAlB,EAAsBE,GAAtB,CALO,EAMP,KAAKE,YAAL,CAAkBJ,EAAlB,EAAsBE,GAAtB,CANO,EAOP,KAAKE,YAAL,CAAkBJ,EAAlB,EAAsBE,GAAtB,CAPO,EAQP,KAAKE,YAAL,CAAkBJ,EAAlB,EAAsBE,GAAtB,CARO,CAAX;AAWA,WAAOC,IAAP;AACH;;AAEDF,EAAAA,QAAQ,GAAE;AACN,QAAII,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAU,CAAV,CAAV;AACA,QAAIC,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAV;AACA,WAAOH,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,MAAiBF,GAAG,GAAGH,GAAvB,CAAX,IAA0CA,GAAjD;AACH;;AAED,QAAMD,YAAN,CAAoBJ,EAApB,EAAwBE,GAAxB,EAA6B;AACzB,UAAMS,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAD,CAAvB;AACA,UAAMW,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AAEA,UAAMC,WAAW,GAAGF,OAAO,CAACG,IAA5B;AACA,UAAMC,UAAU,GAAGJ,OAAO,CAACK,eAA3B;AACA,UAAMC,WAAW,GAAGN,OAAO,CAACO,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsBL,IAA1C,CANyB,CAOzB;;AACA,SAAKM,QAAL,CAAc;AAACvB,MAAAA,IAAI,EAAEc,OAAP;AAAgBlB,MAAAA,OAAO,EAAE;AAAzB,KAAd;AACA,WAAOkB,OAAP,CATyB,CAUzB;AACD;AACF;;AA7D4B;;AAgEjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Pokedex from './Pokedex';\n\nconst NAME_API =\n    'https://pokeapi.co/api/v2/pokemon/';\n\nclass Pokegame extends Component {    \n    constructor (props) {\n        super(props);\n        this.state = {\n            loading: true\n        }\n    }\n\n    componentWillMount() {\n        this.createHand();\n    }\n\n    render() {\n        if (!this.state.loading){\n            return (\n            <div className=\"Pokegame\">\n                <Pokedex hand={data} />\n                <h1>VS</h1>\n                <Pokedex hand={data} />\n            </div>\n        )\n        } else {\n            return <h1>Loading...</h1>\n        }\n    }\n\n    createHand() {\n        let id = this.randomID();\n        let url = `${NAME_API}${id}`\n        let hand = [\n            this.parseDetails(id, url),\n            this.parseDetails(id, url),\n            this.parseDetails(id, url),\n            this.parseDetails(id, url),\n            this.parseDetails(id, url),\n            this.parseDetails(id, url),\n            this.parseDetails(id, url),\n            this.parseDetails(id, url),\n        ];\n\n        return hand;\n    }\n    \n    randomID(){\n        let min = Math.ceil(1);\n        let max = Math.floor(150);\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    async parseDetails (id, url) {\n        const res = await fetch(url);\n        const pokemon = await res.json();\n\n        const pokemonName = pokemon.name;\n        const pokemonEXP = pokemon.base_experience;\n        const pokemonType = pokemon.types[0].type.name;\n        //console.log(pokemon);\n        this.setState({data: pokemon, loading: false});\n        return pokemon;\n        //this.setState({name: pokemonName, base_experience: pokemonEXP, type: pokemonType});\n       //console.log('state changed');\n    }\n}\n\nexport default Pokegame;"]},"metadata":{},"sourceType":"module"}