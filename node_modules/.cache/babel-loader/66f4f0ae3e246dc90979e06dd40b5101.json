{"ast":null,"code":"var _jsxFileName = \"/Users/nicholostyler/Documents/pokedex-app/src/Pokegame.js\";\nimport React, { Component } from 'react';\nimport Pokedex from './Pokedex';\nimport Pokecard from './Pokecard';\nconst NAME_API = 'https://pokeapi.co/api/v2/pokemon/';\n\nclass Pokegame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      hand1: [],\n      hand2: []\n    };\n  }\n\n  componentWillMount() {\n    const data = this.buildData();\n  }\n\n  render() {\n    if (this.state.loading == false) {\n      return React.createElement(\"div\", {\n        className: \"Pokegame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Pokedex, {\n        hand: this.state.hand1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(Pokedex, {\n        hand: this.state.hand2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n  randomID() {\n    let min = Math.ceil(1);\n    let max = Math.floor(150);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  async fetchData() {\n    let id = this.randomID();\n    let url = `${NAME_API}${id}`;\n    let json = null;\n    let response = await fetch(url);\n    let data = await response.json();\n    return data;\n  }\n\n  async buildData() {\n    let hand1 = [];\n    let hand2 = [];\n    let data1 = null;\n    let data2 = null;\n\n    for (let step = 0; step < 8; step++) {\n      this.fetchData().then(data => data1.push(data));\n    }\n\n    for (let step = 0; step < 8; step++) {\n      this.fetchData().then(data => data2.push(data));\n    }\n\n    return {\n      data1,\n      data2\n    }; //this.setState({ hand1: hand1, hand2: hand2});\n  }\n\n  buildHand(data1, data2) {\n    let hand1 = [];\n    let hand2 = [];\n\n    for (let step = 0; step < 8; step++) {\n      let element = data1[step];\n      hand1.push({\n        id: element.id,\n        name: element.name,\n        type: element.types[0].type.name,\n        base_experience: element.base_experience\n      });\n      let element2 = data2[step];\n      hand2.push({\n        id: element2.id,\n        name: element2.name,\n        type: element2.types[0].type.name,\n        base_experience: element2.base_experience\n      });\n    }\n  }\n\n}\n\nexport default Pokegame;","map":{"version":3,"sources":["/Users/nicholostyler/Documents/pokedex-app/src/Pokegame.js"],"names":["React","Component","Pokedex","Pokecard","NAME_API","Pokegame","constructor","props","state","loading","hand1","hand2","componentWillMount","data","buildData","render","randomID","min","Math","ceil","max","floor","random","fetchData","id","url","json","response","fetch","data1","data2","step","then","push","buildHand","element","name","type","types","base_experience","element2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Pokedex from './Pokedex';\nimport Pokecard from './Pokecard';\n\nconst NAME_API =\n    'https://pokeapi.co/api/v2/pokemon/';\n    \nclass Pokegame extends Component {    \n    constructor (props) {\n        super(props);\n        this.state = {\n            loading: true,\n            hand1: [],\n            hand2: []\n        }\n    }\n\n    componentWillMount() {\n        const data = this.buildData();\n        \n    }\n\n    render() {\n        if (this.state.loading == false){\n            return (\n                <div className=\"Pokegame\">\n                    <Pokedex hand={this.state.hand1}/>\n                    <Pokedex hand={this.state.hand2}/>\n                </div>\n        )\n        } else {\n            return <h1>Loading...</h1>\n        }\n    }\n    \n    randomID(){\n        let min = Math.ceil(1);\n        let max = Math.floor(150);\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    async fetchData() {\n        let id = this.randomID();\n        let url = `${NAME_API}${id}`;\n        let json = null;\n\n        let response = await fetch(url);\n        let data = await response.json();\n        return data;\n    }\n\n    async buildData() {\n        let hand1 = [];\n        let hand2 = [];\n        let data1 = null;\n        let data2 = null;\n\n        for (let step = 0; step < 8; step++) {\n            this.fetchData()\n                .then(data => data1.push(data));\n        }\n\n        for (let step = 0; step < 8; step++) {\n            this.fetchData()\n                .then(data => data2.push(data));\n        }\n\n        \n        return {data1, data2};\n\n\n\n        //this.setState({ hand1: hand1, hand2: hand2});\n    }\n\n    buildHand(data1, data2) {\n        let hand1 = [];\n        let hand2 = [];\n\n        for(let step = 0; step < 8; step++) {\n            let element = data1[step];\n            hand1.push({id: element.id, name: element.name, type: element.types[0].type.name, base_experience: element.base_experience})\n            let element2 = data2[step];\n            hand2.push({id: element2.id, name: element2.name, type: element2.types[0].type.name, base_experience: element2.base_experience})\n\n        }\n    }\n\n\n}\n\nexport default Pokegame;"]},"metadata":{},"sourceType":"module"}