{"ast":null,"code":"var _jsxFileName = \"/Users/nicholostyler/Documents/pokedex-app/src/Pokegame.js\";\nimport React, { Component } from 'react';\nimport Pokedex from './Pokedex';\nimport Pokecard from './Pokecard';\nconst NAME_API = 'https://pokeapi.co/api/v2/pokemon/';\n\nclass Pokegame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: []\n    };\n  }\n\n  componentWillMount() {\n    this.buildData();\n  }\n\n  render() {\n    if (this.state.loading == false) {\n      let obj = this.buildHand();\n      console.log(obj[0]);\n      return React.createElement(\"div\", {\n        className: \"Pokegame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Pokedex, {\n        hand: this.state.hand1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(Pokedex, {\n        hand: this.state.hand2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n  randomID() {\n    let min = Math.ceil(1);\n    let max = Math.floor(150);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  async fetchData() {\n    let datas = [];\n\n    for (let step = 0; step < 8; step++) {\n      let id = this.randomID();\n      let url = `${NAME_API}${id}`;\n      let res = await fetch(url);\n      let json = await res.json();\n      datas.push(json);\n    }\n\n    return datas;\n  }\n\n  async buildData() {\n    let data = await this.fetchData();\n    console.log(data);\n\n    for (let step = 0; step < data.length; step++) {\n      console.log(data[step]);\n    } //return {data1, data2};\n    //this.setState({ data1: data1, data2: data2});\n\n  }\n\n  async buildHand() {\n    //console.log(data1);\n    this.buildData().then(function (result) {\n      let obj = result;\n      let data1 = obj.data1;\n      let data2 = obj.data2; //console.log(data1);\n\n      let hand1 = [];\n      let hand2 = [];\n\n      for (let step = 0; step < 8; step++) {\n        let element = data1[step];\n        console.log(data1);\n        hand1.push({\n          id: element.id,\n          name: element.name,\n          type: element.types[0].type.name,\n          base_experience: element.base_experience\n        });\n        let element2 = data2[step];\n        hand2.push({\n          id: element2.id,\n          name: element2.name,\n          type: element2.types[0].type.name,\n          base_experience: element2.base_experience\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n      return {\n        hand1,\n        hand2\n      };\n    });\n  }\n\n}\n\nexport default Pokegame;","map":{"version":3,"sources":["/Users/nicholostyler/Documents/pokedex-app/src/Pokegame.js"],"names":["React","Component","Pokedex","Pokecard","NAME_API","Pokegame","constructor","props","state","loading","data","componentWillMount","buildData","render","obj","buildHand","console","log","hand1","hand2","randomID","min","Math","ceil","max","floor","random","fetchData","datas","step","id","url","res","fetch","json","push","length","then","result","data1","data2","element","name","type","types","base_experience","element2","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Pokedex from './Pokedex';\nimport Pokecard from './Pokecard';\n\nconst NAME_API =\n    'https://pokeapi.co/api/v2/pokemon/';\n    \nclass Pokegame extends Component {    \n    constructor (props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: []\n        }\n    }\n\n    componentWillMount() {\n        this.buildData();\n    }\n\n    render() {\n        if (this.state.loading == false){\n            let obj = this.buildHand();\n            console.log(obj[0]);\n            return (\n                <div className=\"Pokegame\">\n                    <Pokedex hand={this.state.hand1}/>\n                    <Pokedex hand={this.state.hand2}/>\n                </div>\n        )\n        } else {\n            return <h1>Loading...</h1>\n        }\n    }\n    \n    randomID(){\n        let min = Math.ceil(1);\n        let max = Math.floor(150);\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    async fetchData() {\n        let datas = [];\n\n        for (let step = 0; step < 8; step++) {\n            let id = this.randomID();\n            let url = `${NAME_API}${id}`;\n\n            let res = await fetch(url);\n            let json = await res.json();\n            datas.push(json);\n        }\n        return datas;\n    }\n\n    async buildData() {\n        let data = await this.fetchData();\n\n        console.log(data); \n        \n        for(let step = 0; step < data.length; step++) {\n            console.log(data[step]);\n        }\n        //return {data1, data2};\n\n        //this.setState({ data1: data1, data2: data2});\n    }\n\n    async buildHand() {\n        //console.log(data1);\n        this.buildData()\n            .then(function(result) {\n                let obj = result;\n                let data1 = obj.data1;\n                let data2 = obj.data2;\n                //console.log(data1);\n                let hand1 = [];\n                let hand2 = [];\n\n                \n        \n                for(let step = 0; step < 8; step++) {\n                    let element = data1[step];\n                    console.log(data1);\n                    hand1.push({id: element.id, name: element.name, type: element.types[0].type.name, base_experience: element.base_experience})\n                    let element2 = data2[step];\n                    hand2.push({id: element2.id, name: element2.name, type: element2.types[0].type.name, base_experience: element2.base_experience})\n                    \n                }\n                this.setState({loading: false});\n                return({hand1, hand2});\n            })\n        \n    }\n\n\n}\n\nexport default Pokegame;"]},"metadata":{},"sourceType":"module"}